name: Dart

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test-mobile:
    name: Run Flutter tests on mobile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Flutter tests on mobile and capture output
        run: |
          mkdir -p files
          flutter test --dart-define=BENCHMARK_REPEAT=1000 > mobile_test_output.log

      - name: Extract mobile benchmark report from log
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "Using TIMESTAMP: $TIMESTAMP"
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          
          awk '/BENCHMARK_REPORT_START/,/BENCHMARK_REPORT_END/' mobile_test_output.log | sed '1d;$d' > files/mobile_benchmark_report_${TIMESTAMP}.json
          echo "Extracted mobile Report:"
          cat files/mobile_benchmark_report_${TIMESTAMP}.json

      - name: Commit and Push mobile Benchmark Report
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add files/mobile_benchmark_report_${TIMESTAMP}.json
          git commit -m "Add mobile benchmark report"
          git pull --rebase origin main
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-web:
    name: Run Flutter tests on Web (Chrome)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Flutter tests on Web and capture output
        run: |
          mkdir -p files
          flutter test --platform chrome --dart-define=BENCHMARK_REPEAT=1000 > web_test_output.log

      - name: Extract Web benchmark report from log
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "Using TIMESTAMP: $TIMESTAMP"
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

          awk '/BENCHMARK_REPORT_START/,/BENCHMARK_REPORT_END/' web_test_output.log | sed '1d;$d' > files/web_benchmark_report_${TIMESTAMP}.json
          echo "Extracted Web Report:"
          cat files/web_benchmark_report_${TIMESTAMP}.json

      - name: Commit and Push Web Benchmark Report
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add files/web_benchmark_report_${TIMESTAMP}.json
          git commit -m "Add Web benchmark report"
          git pull --rebase origin main
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
