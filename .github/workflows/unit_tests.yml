name: Flutter unit tests (mobile + web)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read 

env:
  BENCHMARK_REPEAT: 10

jobs:
  test-mobile:
    name: Run Flutter tests on mobile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests & capture benchmark JSON
        id: run_tests
        run: |
          set -eo pipefail
          mkdir -p perf
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

          flutter test | tee test_output.log
          EXIT_CODE=${PIPESTATUS[0]}

          awk '/PERF_REPORT_START/,/PERF_REPORT_END/' test_output.log | \
            sed '1d;$d' > perf/mobile_benchmark_${TIMESTAMP}.json || true

          if [[ $EXIT_CODE -ne 0 ]]; then
            echo "Tests failed – printing log for diagnostics:"
            cat test_output.log
          fi
          exit $EXIT_CODE

      - uses: actions/upload-artifact@v4
        with:
          name: benchmark-mobile-${{ env.TIMESTAMP }}
          path: perf/mobile_benchmark_${{ env.TIMESTAMP }}.json
          if-no-files-found: warn  


  test-web:
    name: Run Flutter tests on Web (Chrome)
    runs-on: ubuntu-latest
    needs: test-mobile 

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: stable

      - name: Enable web & make sure Chrome is available
        run: |
          sudo apt-get update -y
          sudo apt-get install -y chromium-browser || true   # ubuntu-latest often has google-chrome already
          flutter config --enable-web
          flutter devices

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests (Chrome) & capture benchmark JSON
        run: |
          set -eo pipefail
          mkdir -p perf
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

          flutter test --platform chrome | tee test_output.log
          EXIT_CODE=${PIPESTATUS[0]}

          awk '/PERF_REPORT_START/,/PERF_REPORT_END/' test_output.log | \
            sed '1d;$d' > perf/web_benchmark_${TIMESTAMP}.json || true

          if [[ $EXIT_CODE -ne 0 ]]; then
            echo "Web tests failed – printing log:"
            cat test_output.log
          fi
          exit $EXIT_CODE

      - uses: actions/upload-artifact@v4
        with:
          name: benchmark-web-${{ env.TIMESTAMP }}
          path: perf/web_benchmark_${{ env.TIMESTAMP }}.json
          if-no-files-found: warn
